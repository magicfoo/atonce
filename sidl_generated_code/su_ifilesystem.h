/*LIC-HDR********************************************************************
**
** Copyright (C) 2005-2011 AtOnce Technologies
**
** This file is part of the Sugar core-system framework.
**
** This file and the associated product may be used and distributed
** under the terms of a current License as defined by AtOnce Technologies
** and appearing in the file LICENSE.TXT included in the packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
** See http://www.atonce-technologies.com or email info@atonce-technologies.com
** for informations about Sugar Framework and AtOnce Technologies others products
** License Agreements.
**
** Contact info@atonce-technologies.com if any conditions of this license
** are not clear to you.
**
*****************************************************************LIC-HDR*/


// !! This file has been automatically generated by the sugar sidl tool.
// !! Do not edit this file manually under risk of losing your changes.


#ifndef _su_ifilesystem_h_
#define _su_ifilesystem_h_




su_type( IDirectory )
su_type( IFileReader )
su_type( IFileWriter )
su_type( IFileBurst )
su_type( IFileView )


namespace su
{


	struct IFileSystem : public IInterface
	{
		SU_DECL_INTERFACE( IInterface, 0xc761aeefu )


		virtual bool            IsExists               ( pcstr            inPathname                  ) = 0;

		virtual bool            IsEmpty                ( pcstr            inPathname                  ) = 0;

		virtual bool            IsDirectory            ( pcstr            inPathname                  ) = 0;

		virtual bool            IsFile                 ( pcstr            inPathname                  ) = 0;

		virtual bool            IsReadOnly             ( pcstr            inPathname                  ) = 0;

		virtual bool            IsHidden               ( pcstr            inPathname                  ) = 0;

		virtual bool            IsSystem               ( pcstr            inPathname                  ) = 0;

		virtual bool            IsFullname             ( pcstr            inPathname                  ) = 0;

		virtual bool            IsInDirectory          ( pcstr            inPathname                 ,
		                                                 pcstr            inDirname                   ) = 0;

		virtual PString         SplitExtension         ( pcstr            inPathname                  ) = 0;

		virtual bool            HasExtension           ( pcstr            inPathname                 ,
		                                                 pcstr            inExtension                 ) = 0;

		virtual PString         GetExtension           ( pcstr            inPathname                  ) = 0;

		virtual PString         GetBasename            ( pcstr            inPathname                  ) = 0;

		virtual PString         GetDirname             ( pcstr            inPathname                  ) = 0;

		virtual PString         GetFullname            ( pcstr            inPathname                  ) = 0;

		virtual PString         GetNormalized          ( pcstr            inPathname                  ) = 0;

		virtual bool            GetSize                ( pcstr            inFilename                 ,
		                                                 uint64&          outBSize                    ) = 0;

		virtual bool            GetWriteTime           ( pcstr            inFilename                 ,
		                                                 Date&            outDate                     ) = 0;

		virtual bool            GetCreationTime        ( pcstr            inFilename                 ,
		                                                 Date&            outDate                     ) = 0;

		virtual uint128         HashContent            ( pcstr            inFilename                  ) = 0;

		virtual PString         GetCurrentDirectory    (                                            ) = 0;

		virtual bool            SetCurrentDirectory    ( pcstr            inDirname                   ) = 0;

		virtual PString         GetCommonPath          ( pcstr            inPathname0                ,
		                                                 pcstr            inPathname1                 ) = 0;

		virtual PString         GetCommonDirectory     ( pcstr            inPathname0                ,
		                                                 pcstr            inPathname1                 ) = 0;

		virtual PString         GetRelativeFrom        ( pcstr            inPathname                 ,
		                                                 pcstr            inOriginPath                ) = 0;

		virtual PString         FindFile               ( pcstr            inPathname                 ,
		                                                 pcstr            inOriginPath                ) = 0;

		virtual bool            Hide                   ( pcstr            inPathname                  ) = 0;

		virtual bool            Unhide                 ( pcstr            inPathname                  ) = 0;

		virtual bool            SetReadOnly            ( pcstr            inPathname                  ) = 0;

		virtual bool            SetReadWrite           ( pcstr            inPathname                  ) = 0;

		virtual bool            CopyFile               ( pcstr            inDstFilename              ,
		                                                 pcstr            inSrcFilename              ,
		                                                 bool             inFailIfExists      = false,
		                                                 Pool*            inPool              = NULL  ) = 0;

		virtual bool            MoveFile               ( pcstr            inDstFilename              ,
		                                                 pcstr            inSrcFilename               ) = 0;

		virtual bool            CreateFile             ( pcstr            inFilename                 ,
		                                                 bool             inFailIfExists      = false,
		                                                 uint64           inBSize             = 0     ) = 0;

		virtual bool            CreateDir              ( pcstr            inDirname                   ) = 0;

		virtual bool            RemoveFile             ( pcstr            inFilename                  ) = 0;

		virtual bool            RemoveDir              ( pcstr            inDirname                  ,
		                                                 bool             inForceNotEmpty     = false ) = 0;

		virtual IFileReader*    OpenReader             ( pcstr            inFilename                 ,
		                                                 Pool*            inPool                      ) = 0;

		virtual IFileView*      OpenView               ( pcstr            inFilename                 ,
		                                                 Pool*            inPool                      ) = 0;

		virtual IFileBurst*     OpenBurst              ( pcstr            inFilename                 ,
		                                                 Pool*            inPool                      ) = 0;

		virtual IFileWriter*    OpenWriter             ( pcstr            inFilename                 ,
		                                                 Pool*            inPool                     ,
		                                                 bool             inCreateIfNotExists = true ,
		                                                 bool             inAppend            = false ) = 0;

		virtual IDirectory*     OpenDir                ( pcstr            inDirname                  ,
		                                                 Pool*            inPool                      ) = 0;

		virtual uint            GlobFiles              ( pcstr            inFiltername               ,
		                                                 vector<PString>& outFiles                   ,
		                                                 Pool*            inPool                      ) = 0;

		virtual bool            DumpToFile             ( pcstr            inFilename                 ,
		                                                 void*            inBufferAddr               ,
		                                                 uint             inBufferBSize              ,
		                                                 bool             inAppend            = false ) = 0;

		virtual bool            DumpFromFile           ( uint&            outBufferBSize             ,
		                                                 pcstr            inFilename                 ,
		                                                 void*            inBufferAddr               ,
		                                                 uint             inBufferBCapacity           ) = 0;

		virtual bool            DumpFromFile           ( uint&            outBufferBSize             ,
		                                                 void*&           outBufferAddr              ,
		                                                 pcstr            inFilename                 ,
		                                                 Pool*            inPool                      ) = 0;

		virtual bool            StartInflateFile       ( IFileWriter*     outFile                    ,
		                                                 IFileReader*     inFile                     ,
		                                                 Pool*            inPool                      ) = 0;

		virtual int             ContinueInflateFile    ( uint             inmaxmstime                 ) = 0;

		virtual void            AbortInflateFile       (                                            ) = 0;

		virtual bool            DumpSliceFromFile      ( void*            inBufferAddr               ,
		                                                 pcstr            inFilename                 ,
		                                                 uint             inSliceBOffset             ,
		                                                 int              inSliceBSize                ) = 0;

		virtual bool            Mount                  ( pcstr            inDirname                  ,
		                                                 pcstr            inDevClassname             ,
		                                                 pcstr            inDevOptions                ) = 0;

		virtual bool            Unmount                ( pcstr            inDirname                   ) = 0;

		virtual void            UnmountAll             (                                            ) = 0;

		virtual int             CountMount             (                                            ) = 0;

		virtual pcstr           EnumMountPath          ( int              inIdx                       ) = 0;

		virtual pcstr           EnumMountOptions       ( int              inIdx                       ) = 0;

		virtual PString         GetHostPath            ( pcstr            inVirtualPath               ) = 0;

		virtual PString         GetVirtualPath         ( pcstr            inHostPath                  ) = 0;
	};


}




#endif // _su_ifilesystem_h_


// !! This file has been automatically generated by the sugar sidl tool.
// !! Do not edit this file manually under risk of losing your changes.

