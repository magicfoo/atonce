/*LIC-HDR********************************************************************
**
** Copyright (C) 2005-2011 AtOnce Technologies
**
** This file is part of the Sugar core-system framework.
**
** This file and the associated product may be used and distributed
** under the terms of a current License as defined by AtOnce Technologies
** and appearing in the file LICENSE.TXT included in the packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
** See http://www.atonce-technologies.com or email info@atonce-technologies.com
** for informations about Sugar Framework and AtOnce Technologies others products
** License Agreements.
**
** Contact info@atonce-technologies.com if any conditions of this license
** are not clear to you.
**
*****************************************************************LIC-HDR*/


// !! This file has been automatically generated by the sugar sidl tool.
// !! Do not edit this file manually under risk of losing your changes.


#ifndef _su_iluastring_h_
#define _su_iluastring_h_




struct lua_State;


namespace su
{


	struct ILuaString : public IInterface
	{
		SU_DECL_INTERFACE( IInterface, 0x99bde3ecu )


		virtual int    Lua_len              ( lua_State* L ) = 0;

		virtual int    Lua_cvt              ( lua_State* L ) = 0;

		virtual int    Lua_format           ( lua_State* L ) = 0;

		virtual int    Lua_match            ( lua_State* L ) = 0;

		virtual int    Lua_decodeHex        ( lua_State* L ) = 0;

		virtual int    Lua_decodeFloat      ( lua_State* L ) = 0;

		virtual int    Lua_isEmpty          ( lua_State* L ) = 0;

		virtual int    Lua_isSpace          ( lua_State* L ) = 0;

		virtual int    Lua_isAlpha          ( lua_State* L ) = 0;

		virtual int    Lua_isDigit2         ( lua_State* L ) = 0;

		virtual int    Lua_isDigit10        ( lua_State* L ) = 0;

		virtual int    Lua_isDigit16        ( lua_State* L ) = 0;

		virtual int    Lua_isAlnum          ( lua_State* L ) = 0;

		virtual int    Lua_isUpper          ( lua_State* L ) = 0;

		virtual int    Lua_isLower          ( lua_State* L ) = 0;

		virtual int    Lua_isIdent          ( lua_State* L ) = 0;

		virtual int    Lua_compare          ( lua_State* L ) = 0;

		virtual int    Lua_equals           ( lua_State* L ) = 0;

		virtual int    Lua_find             ( lua_State* L ) = 0;

		virtual int    Lua_findAny          ( lua_State* L ) = 0;

		virtual int    Lua_startsWith       ( lua_State* L ) = 0;

		virtual int    Lua_startsWithAny    ( lua_State* L ) = 0;

		virtual int    Lua_endsWith         ( lua_State* L ) = 0;

		virtual int    Lua_endsWithAny      ( lua_State* L ) = 0;

		virtual int    Lua_copy             ( lua_State* L ) = 0;

		virtual int    Lua_indexOf          ( lua_State* L ) = 0;

		virtual int    Lua_indexOfAny       ( lua_State* L ) = 0;

		virtual int    Lua_upper            ( lua_State* L ) = 0;

		virtual int    Lua_lower            ( lua_State* L ) = 0;

		virtual int    Lua_strip            ( lua_State* L ) = 0;

		virtual int    Lua_split            ( lua_State* L ) = 0;

		virtual int    Lua_splitlines       ( lua_State* L ) = 0;

		virtual int    Lua_splitargs        ( lua_State* L ) = 0;

		virtual int    Lua_join             ( lua_State* L ) = 0;

		virtual int    Lua_mid              ( lua_State* L ) = 0;

		virtual int    Lua_xmid             ( lua_State* L ) = 0;

		virtual int    Lua_left             ( lua_State* L ) = 0;

		virtual int    Lua_right            ( lua_State* L ) = 0;

		virtual int    Lua_front            ( lua_State* L ) = 0;

		virtual int    Lua_back             ( lua_State* L ) = 0;

		virtual int    Lua_replace          ( lua_State* L ) = 0;

		virtual int    Lua_reverse          ( lua_State* L ) = 0;
	};


}




#endif // _su_iluastring_h_


// !! This file has been automatically generated by the sugar sidl tool.
// !! Do not edit this file manually under risk of losing your changes.

